const mineflayer = require('mineflayer');
const { pathfinder, Movements, goals } = require('mineflayer-pathfinder');
const { plugin: pvp } = require('mineflayer-pvp');
const mcDataLoader = require('minecraft-data');

const bot = mineflayer.createBot({
  host: "asst.aternos.me", // 🔹 change this to your server IP/host
  port: 36474,                            // 🔹 change if your server uses a custom port
  username: "24_7_prasad",                    // 🔹 bot’s MC username
  version: "1.12.2"                       // 🔹 force 1.12.x compatibility
});

// Load plugins
bot.loadPlugin(pathfinder);
bot.loadPlugin(pvp);

// AuthMe Reloaded login
bot.once("spawn", () => {
  console.log("✅ Bot spawned, sending login...");
  bot.chat("/register tralalelo tralalelo"); // 🔹 replace with AuthMe password
  bot.chat("/login tralalelo"); // 🔹 replace with AuthMe password
});

// Pathfinder setup
bot.once("spawn", () => {
  const mcData = mcDataLoader(bot.version);
  const defaultMove = new Movements(bot, mcData);
  bot.pathfinder.setMovements(defaultMove);
});

// Example: walk to a random position every 2 minutes
setInterval(() => {
  const x = bot.entity.position.x + (Math.random() * 10 - 5);
  const y = bot.entity.position.y;
  const z = bot.entity.position.z + (Math.random() * 10 - 5);
  console.log(`🚶 Walking to ${x.toFixed(1)} ${y.toFixed(1)} ${z.toFixed(1)}`);
  bot.pathfinder.setGoal(new goals.GoalBlock(Math.floor(x), Math.floor(y), Math.floor(z)));
}, 120000);

// Smooth look around to avoid GrimAC suspicion
function smoothLook(yaw, pitch, time = 500) {
  const startYaw = bot.entity.yaw;
  const startPitch = bot.entity.pitch;
  const startTime = Date.now();

  const interval = setInterval(() => {
    const progress = (Date.now() - startTime) / time;
    if (progress >= 1) {
      bot.look(yaw, pitch, true);
      clearInterval(interval);
    } else {
      const newYaw = startYaw + (yaw - startYaw) * progress;
      const newPitch = startPitch + (pitch - startPitch) * progress;
      bot.look(newYaw, newPitch, true);
    }
  }, 50);
}

// Random head movement every 30s
setInterval(() => {
  const yaw = Math.random() * Math.PI * 2;
  const pitch = (Math.random() - 0.5) * Math.PI / 2;
  smoothLook(yaw, pitch, 800);
}, 30000);

// Random chat to look like a player
const messages = ["Myre!", "Eda kunjaa...", "Pelayadi", "Umbb!"];
setInterval(() => {
  const msg = messages[Math.floor(Math.random() * messages.length)];
  bot.chat(msg);
}, 90000 + Math.random() * 30000);

// PvP example: attack when told in chat
bot.on("chat", (username, message) => {
  if (message === "fight me" && bot.players[username]) {
    const target = bot.players[username].entity;
    if (target) {
      console.log(`⚔️ Attacking ${username}`);
      bot.pvp.attack(target);
    }
  }
});

// Auto-reconnect if kicked/disconnected
bot.on("end", () => {
  console.log("❌ Bot disconnected, restarting in 8s...");
  setTimeout(() => {
    process.exit(1); // Koyeb will restart the process
  }, 8000);
});

